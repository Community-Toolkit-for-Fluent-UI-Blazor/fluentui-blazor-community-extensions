<h3>Allow or deny items</h3>

<p>
    You can allow items to be dragged from one source to a target by a predicate.
    In this sample, only fruits which contain "berries" can be dropped in the target list.
</p>

<FluentStack>
    <FluentStack Orientation="Orientation.Vertical">
        <FluentLabel>Dropzone source</FluentLabel>

        <FluentCxDropZoneContainer Items="@_sourceList">
            <ItemContent>
                <FluentCard>
                    @context.Title
                </FluentCard>
            </ItemContent>
        </FluentCxDropZoneContainer>
    </FluentStack>

    <FluentStack Orientation="Orientation.Vertical">
        <FluentLabel>Target dropzone</FluentLabel>

        <FluentCxDropZoneContainer IsDropAllowed="@((d, t) => d?.Title?.Contains("berries") ?? true)"
                                   TItem="DropZoneSampleItem"
                                   OnItemDropRejected="@((i) => lastdropped = i)"
                                   Items="@_targetList">
            <ItemContent>
                <FluentCard>
                    @context.Title
                </FluentCard>
            </ItemContent>
        </FluentCxDropZoneContainer>
    </FluentStack>
</FluentStack>

<br />

@if (lastdropped != null)
{
    <FluentLabel>You can't go here:  @lastdropped?.Title</FluentLabel>
}

@code {
    private DropZoneSampleItem? lastdropped;

    private readonly List<DropZoneSampleItem> _sourceList = new List<DropZoneSampleItem>()
    {
            new DropZoneSampleItem(){Title = "Apples"},
            new DropZoneSampleItem(){Title = "Oranges"},
            new DropZoneSampleItem(){Title = "Bananas"},
            new DropZoneSampleItem(){Title = "Strawberries"},
            new DropZoneSampleItem(){Title = "Raspberries"},
    };

    private readonly List<DropZoneSampleItem> _targetList = new List<DropZoneSampleItem>()
{
            new DropZoneSampleItem(){Title = "Blackberries"},
    };

}
