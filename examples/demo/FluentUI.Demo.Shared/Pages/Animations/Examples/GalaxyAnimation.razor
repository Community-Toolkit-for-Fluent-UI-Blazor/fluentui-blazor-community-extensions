@using Microsoft.FluentUI.AspNetCore.Components.Extensions
<div style="width:100%; height: 500px">
    <FluentStack>
        <FluentStack Orientation=Orientation.Vertical Style="margin-bottom: 20px">
            <FluentSlider Label="@GetArmsLabel()"
                          @bind-Value=_arms
                          @bind-Value:after="OnUpdateRequestedAsync"
                          Min="0"
                          Max="5"
                          Step="1"
                          Style="width: 200px; margin-right: 20px" />

            <FluentSlider Label="@GetRotationPerTurnLabel()"
                          @bind-Value=_rotationPerTurn
                          @bind-Value:after="OnUpdateRequestedAsync"
                          Min="0"
                          Max="5"
                          Step="1"
                          Style="width: 200px; margin-right: 20px" />

            <FluentSlider Label="@GetSpreadLabel()"
                          @bind-Value=_spread
                          @bind-Value:after="OnUpdateRequestedAsync"
                          Min="0"
                          Max="2"
                          Step="0.1"
                          Style="width: 200px; margin-right: 20px" />

            <FluentSlider Label="@GetTurnsLabel()"
                          @bind-Value=_turns
                          @bind-Value:after="OnUpdateRequestedAsync"
                          Min="0"
                          Max="5"
                          Step="1"
                          Style="width: 200px; margin-right: 20px" />

            <FluentSlider Label="@GetDurationLabel()"
                          @bind-Value=_duration
                          @bind-Value:after="OnUpdateRequestedAsync"
                          Min="500"
                          Max="2000"
                          Step="100"
                          Style="width: 200px; margin-right: 20px" />

            <FluentSelect Label="Easing Function"
                          TOption="EasingFunction"
                          Items="@(Enum.GetValues<EasingFunction>())"
                          OptionText="@(e => e.ToAttributeValue())"
                          @bind-SelectedOption=_easingFunction
                          @bind-SelectedOption:after="OnUpdateRequestedAsync"
                          Style="width: 200px; margin-right: 20px">
            </FluentSelect>

            <FluentSelect @bind-SelectedOption=_easingMode
                          TOption="EasingMode"
                          Items="@(Enum.GetValues<EasingMode>())"
                          Label="Easing mode"
                          @bind-SelectedOption:after="OnUpdateRequestedAsync"
                          Style="width: 200px; margin-right: 20px" />
        </FluentStack>

        <FluentStack HorizontalAlignment="HorizontalAlignment.Center" VerticalAlignment="VerticalAlignment.Center">
            <FluentCxAnimation @ref=_animation>
                <ChildContent>
                    <AnimationItem Width="100" Height="100">
                        <img width="100" height="100" style="border-radius: 8px" src="./_content/FluentUI.Demo.Shared/slideshowimages/1.jpg" />
                    </AnimationItem>

                    <AnimationItem Width="100" Height="100">
                        <img width="100" height="100" style="border-radius: 8px" src="./_content/FluentUI.Demo.Shared/slideshowimages/2.jpg" />
                    </AnimationItem>

                    <AnimationItem Width="100" Height="100">
                        <img width="100" height="100" style="border-radius: 8px" src="./_content/FluentUI.Demo.Shared/slideshowimages/3.jpg" />
                    </AnimationItem>
                </ChildContent>

                <Layout>
                    <GalaxyLayout Arms=@_arms
                                  RotationPerTurn=@_rotationPerTurn
                                  Spread=@_spread
                                  Turns="@_turns"
                                 Duration="@TimeSpan.FromMilliseconds(_duration)"
                                 EasingFunction="@_easingFunction"
                                 EasingMode="@_easingMode" />
                </Layout>
            </FluentCxAnimation>
        </FluentStack>
    </FluentStack>
</div>

@code {
    private FluentCxAnimation? _animation;
    private int _arms = 1;
    private int _rotationPerTurn = 1;
    private double _spread = 0.5;
    private int _turns = 3;
    private int _duration = 500;
    private EasingFunction _easingFunction = EasingFunction.Linear;
    private EasingMode _easingMode = EasingMode.In;

    private string GetArmsLabel() => $"Arms: {_arms}";

    private string GetDurationLabel() => $"Duration: {_duration}ms";

    private string GetSpreadLabel() => $"Spread: {_spread}";

    private string GetTurnsLabel() => $"Turns: {_turns}";

    private string GetRotationPerTurnLabel() => $"Rotation per turn: {_rotationPerTurn}";

    private async Task OnUpdateRequestedAsync()
    {
        if (_animation is not null)
        {
            await _animation.StopAsync();
            await _animation.StartAsync();
        }
    }
}
