@namespace FluentUI.Blazor.Community.Components
@inject IDialogService DialogService
@typeparam TItem where TItem : class, new()

<FluentStack Orientation="Orientation.Vertical" Style="height: 100%" VerticalGap="1">
    @if (FileNavigationViewVisible)
    {
       <FluentCxPathBar Root="@PathRoot"
                        Path="@Path"
                        PathChanged="@OnPathChanged"
                        MaxVisibleItems="@MaxVisibleItems"/>
    }

    @switch (State.View)
    {
        case FileView.List:
        case FileView.Details:
            <FileManagerList OnItemDoubleTapped="@OnItemDoubleTappedAsync"
                             @bind-SelectedItems="@SelectedItems"
                             @bind-SelectedItems:after=OnSelectedItemsChangedAsync
                             Entry="@Entry"
                             TItem="@TItem"
                             IsBusy=@_isBusy
                             IsIndeterminateProgress=@IsIndeterminateProgress
                             ProgressLabel="@ProgressLabel"
                             ProgressPercent="@ProgressPercent"
                             ColumnLabels="@ColumnLabels"
                             IsMobile="@IsMobile" />
            break;

        default:
            <FileManagerGrid TItem="@TItem"
                             OnItemDoubleTapped="@OnItemDoubleTappedAsync"
                             ItemTemplate="@ItemTemplate"
                             @bind-SelectedItems="@SelectedItems"
                             @bind-SelectedItems:after=OnSelectedItemsChangedAsync
                             Entry="@Entry"
                             IsBusy=@_isBusy
                             IsIndeterminateProgress=@IsIndeterminateProgress
                             ProgressLabel="@ProgressLabel"
                             ProgressPercent="@ProgressPercent"
                             IsMobile="@IsMobile"/>
            break;
    }
</FluentStack>
