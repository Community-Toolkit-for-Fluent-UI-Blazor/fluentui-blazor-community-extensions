@namespace FluentUI.Blazor.Community.Components
@inherits FluentComponentBase

<FluentStack Id="@Id"
             VerticalAlignment=VerticalAlignment.Center
             HorizontalAlignment="HorizontalAlignment.Center"
             HorizontalGap="15">
    <PlaylistButton Label="@Labels.PlaylistLabel" OnPlaylist="@OnPlaylistToggled" />

    @if (IsChapterVisible)
    {
        <ChapterButton Label="@Labels.ChaptersLabel"
                       OnChapter="@OnChapterToggled" />
    }

    <FluentSpacer />

    <ShuffleButton ShuffleOnLabel="@Labels.ShuffleOnLabel"
                   ShuffleOffLabel=@Labels.ShuffleOffLabel
                   OnShuffleChanged="@OnShuffleChanged" />

    <PreviousButton Label="@Labels.PreviousLabel"
                    IsDisabled=@IsPreviousDisabled
                    OnPrevious="@OnPrevious" />

    <PlayOrPauseButton @ref=_playOrPauseButton
                       IsDisabled="@IsPlayOrPauseDisabled"
                       PlayLabel="@Labels.PlayLabel"
                       PauseLabel="@Labels.PauseLabel"
                       OnPlayChanged="@OnPlayPauseToggled" />

    <StopButton OnStop="@OnStop"
                Label="@Labels.StopLabel"
                IsDisabled=@IsStopDisabled />

    <NextButton IsDisabled=@IsNextDisabled
                OnNext="@OnNext"
                Label="@Labels.NextLabel" />

    <RepeatButton PlaylistLoopLabel="@Labels.PlaylistLoopLabel"
                  PlaylistOnceLabel="@Labels.PlaylistOnceLabel"
                  SingleLoopLabel="@Labels.SingleLoopLabel"
                  SingleOnceLabel="@Labels.SingleOnceLabel"
                  OnRepeatModeChanged="@OnRepeatModeChanged" />

    <VolumeButton Label="@Labels.VolumeLabel" OnVolumeChanged="@OnVolumeChanged" />

    <FluentSpacer />

    @if (IsSettingsVisible)
    {
        <VideoSettingsButton @ref="_videoSettingsButton"
                             IsDisabled="@IsSettingsDisabled"        
                             Label="@Labels.VideoSettingsLabel">
            @VideoSettingsContent
        </VideoSettingsButton>
    }

    @if (IsDownloadVisible)
    {
        <DownloadButton IsDisabled="@IsDownloadDisabled"
                        Label="@Labels.DownloadLabel"
                        OnDownload="@OnDownload" />
    }

    <PropertiesButton IsDisabled="@IsPropertiesDisabled"
                      Label="@Labels.PropertiesLabel"
                      OnProperties="@OnProperties" />

    <FluentSpacer />

    <TheaterButton Label="@Labels.TheaterLabel"
                   OnTheater="@OnTheater" />

    <PiPButton Label="@Labels.PiPLabel"
               OnPiP="@OnPiP"
               IsDisabled="@IsPiPDisabled" />

    <FullScreenButton Label="@Labels.FullscreenLabel"
                      OnFullscreen="@OnFullscreen"
                      IsDisabled="@IsFullscreenDisabled" />
</FluentStack>
